#!/bin/bash
# /etc/init.d/minecraft
# version 0.6 2012-02-25 (YYYY-MM-DD)

### BEGIN INIT INFO
# Provides:   minecraft
# Required-Start: $local_fs $remote_fs
# Required-Stop:  $local_fs $remote_fs
# Should-Start:   $network
# Should-Stop:    $network
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Short-Description:    Minecraft server
# Description:    Starts the minecraft server
### END INIT INFO

#Settings
JARFILE='server.jar'
USERNAME="minecraft"
MCSTORE="/home/sync"
MCPATH="/home/minecraft"
CPU_COUNT=1
INVOCATION="java -server \
-Dfml.doNotBackup \
-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSIncrementalPacing -XX:ParallelGCThreads=2 -XX:+AggressiveOpts \
-XX:MaxPermSize=512M -Xms6144M -Xmx6144M -jar $JARFILE"
BACKUPPATH="/home/backups/"
WORLD=world
OLDBACKUPS=12

TZ='Europe/Berlin'; export TZ

as_user() {
  if [ "`whoami`" == "$USERNAME" ] ; then
    bash -c "$1"
  else
    su - $USERNAME -c "$1"
  fi
}

mc_status() {
  ps aux |grep -F -v grep|grep -F -v SCREEN|grep -F --quiet $JARFILE
  return $?
}

mc_start() {
  if mc_status; then
    echo "Tried to start but $JARFILE was already running!"
  else
    echo "$JARFILE was not running... starting."
    if [ -d $MCSTORE/$WORLD.bak ]; then
      echo "last $WORLD.bak still exist, crashed warning! manual check required!!!"
      exit 1
    fi
    cd $MCPATH
    if [ ! -f "$MCPATH/$JARFILE" ]; then 
      echo "Ram drive empty...  prepping."
      as_user "cp -R $MCSTORE/* $MCPATH/"
    fi
    as_user "cd $MCPATH && screen -dmS minecraft $INVOCATION"
    sleep 7
    if mc_status; then
      echo "$JARFILE is now running."
    else
      echo "Could not start $JARFILE."
    fi
  fi
}

mc_saveoff() {
  if mc_status; then
    echo "$JARFILE is running... suspending saves"
    TO_SCREEN="screen -p 0 -S minecraft -X eval 'stuff "
    as_user "$TO_SCREEN \"say SERVER BACKUP STARTING. Server going readonly...\"\015'"
    as_user "$TO_SCREEN \"save-off\"\015'"
    as_user "$TO_SCREEN \"save-all\"\015'"
    sync
    sleep 10
  else
    echo "$JARFILE was not running. Not suspending saves."
  fi
}

mc_saveon() {
  if mc_status; then
    echo "$JARFILE is running... re-enabling saves"
    TO_SCREEN="screen -p 0 -S minecraft -X eval 'stuff "
    as_user "$TO_SCREEN \"save-on\"\015'"
    as_user "$TO_SCREEN \"say SERVER BACKUP ENDED. Server going read-write...\"\015'"
  else
    echo "$JARFILE was not running. Not resuming saves."
  fi
}

mc_stop() {
  if mc_status; then
    echo "$JARFILE is running... stopping."
    TO_SCREEN="screen -p 0 -S minecraft -X eval 'stuff "
    as_user "$TO_SCREEN \"say SERVER SHUTTING DOWN IN 5 SECONDS. Saving map...\"\015'"
    as_user "$TO_SCREEN \"save-all\"\015'"
    sleep 5
    as_user "$TO_SCREEN \"stop\"\015'"
    sleep 5
  else
    echo "$JARFILE was not running."
  fi

  if mc_status; then
    echo "$JARFILE could not be shut down... still running."
  else
    echo "$JARFILE is shut down."
  fi
}


mc_update() {
  if mc_status; then
    echo "$JARFILE is running! Will not start update."
  else
    echo "Test Updating server!"
  fi
}

mc_backup() {
   echo "Backing up minecraft files"
   if [ ! -d $BACKUPPATH/`date +%F` ]; then
     as_user "mkdir $BACKUPPATH/`date +%F`"
   fi
   TO_SCREEN="screen -p 0 -S minecraft -X eval 'stuff "
   as_user "$TO_SCREEN \"say SERVER COMPRESSING BACKUP STARTING...\"\015'"
   as_user "tar zcf $BACKUPPATH/`date +%F`/$WORLD.`date +%F.%H%M%S`.tar.gz -C $MCSTORE $WORLD logs"
   as_user "find $BACKUPPATH/* -type d -mtime +${OLDBACKUPS} | xargs rm -rvf"
   as_user "$TO_SCREEN \"say SERVER COMPRESSING BACKUP ENDED...\"\015'"
   echo "Backup complete"
}

mc_disksaverun() {
  if mc_status; then
    echo "Saving ramdrive to disk."
    if [ ! -f $MCPATH/$JARFILE ]; then
      echo "Error.. Minecraft not in ram"
    else
      TO_SCREEN="screen -p 0 -S minecraft -X eval 'stuff "
      as_user "rsync -a $MCPATH/ $MCSTORE/"
    fi
  else
    echo "Service is not running"
 fi

}

mc_disksavehalt() {
   echo "Saving ramdrive to disk."
   if [ ! -f $MCPATH/$JARFILE ]; then 
     echo "Error.. Minecraft not in ram"
   else
     echo "Saving, screen session closed"
     as_user "rsync -a $MCPATH/ $MCSTORE/"
   fi
}

mc_preparestart() {
   echo "Preparing mods and config files"
   if [ ! -f $MCPATH/$JARFILE ]; then 
     echo "Error.. Minecraft not in ram"
   else
     [ -d "disabled" ] || mkdir disabled
     [ -f mods/whatsthispack*.jar ] && mv mods/whatsthispack*.jar disabled/
     [ -f mods/TabbyChat-*.jar ]  && mv mods/TabbyChat-*.jar disabled/
     [ -f mods/AromaBackup*.jar ]  && mv mods/AromaBackup*.jar disabled/
     [ -f mods/fastcraft-*.jar ]  && mv mods/fastcraft-*.jar disabled/
     [ -f /home/backups/PlayerActivity.log ]  && mv /home/backups/PlayerActivity.log /home/backups/PlayerActivity-`date +%F-%H%M%S`.log \
         && gzip /home/backups/PlayerActivity-`date +%F-%H%M%S`.log && touch /home/backups/PlayerActivity.log
     perl -pi -e 's#finiteWater=true#finiteWater=false#' config/CodeChickenCore.cfg
     perl -pi -e 's#S:location=.*$#S:location=../backups#' config/aroma1997/AromaBackup.cfg
     perl -pi -e 's#I:delay=30#I:delay=0#' config/aroma1997/AromaBackup.cfg
     perl -pi -e 's#B:onShutdown=true#B:onShutdown=false#' config/aroma1997/AromaBackup.cfg
     perl -pi -e 's#B:onStartup=true#B:onStartup=false#' config/aroma1997/AromaBackup.cfg
     perl -pi -e 's#B:LoggingPlayerActivity=false#B:LoggingPlayerActivity=true#' config/GregTech/GregTech.cfg
   fi
}

# make pissible symlink support
# ln -s /etc/init.d/minecraft start.sh
# ln -s /etc/init.d/minecraft restart.sh
# ln -s /etc/init.d/minecraft stop.sh
# ln -s /etc/init.d/minecraft backup.sh

if [ "$1" == "" ]; then
    parameter=`basename $0 | sed 's/\..*//'`
else
    parameter=$1
fi

#Start-Stop here
case "$parameter" in
  start)
    mc_preparestart
    mc_start
    ;;
  stop)
    mc_stop
    mc_disksavehalt
    ;;
  restart)
    mc_stop
    mc_disksavehalt
    mc_preparestart
    mc_start
    ;;
  update)
    ;;
  backup)
    mc_saveoff
    mc_disksaverun
    mc_saveon
    mc_backup
    ;;
  disksavehalt)
    mc_disksavehalt
    ;;
  disksaverun)
    mc_disksaverun
    ;;
  status)
    if mc_status; then
      echo "$JARFILE is running."
    else
      echo "$JARFILE is not running."
    fi
    ;;
  *)
  echo "Usage: /etc/init.d/minecraft {start|stop|update|backup|status|restart|disksaverun}"
  exit 1
  ;;
esac
